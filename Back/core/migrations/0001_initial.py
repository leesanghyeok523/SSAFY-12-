# Generated by Django 4.2.16 on 2024-11-26 10:10

from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('date_of_birth', models.DateField(blank=True, null=True)),
                ('nickname', models.CharField(blank=True, max_length=50, null=True)),
                ('age', models.IntegerField(blank=True, null=True)),
                ('income_level', models.IntegerField(blank=True, null=True)),
                ('member_number', models.CharField(blank=True, max_length=50, null=True)),
                ('joined_products', models.JSONField(blank=True, default=list, null=True)),
                ('profile_picture', models.ImageField(blank=True, null=True, upload_to='profile_pictures/')),
                ('current_assets', models.DecimalField(blank=True, decimal_places=2, max_digits=12, null=True)),
                ('monthly_saving', models.IntegerField(blank=True, help_text='사용자의 월 저축 가능 금액 (1만원 ~ 500만원)', null=True, validators=[django.core.validators.MinValueValidator(10000), django.core.validators.MaxValueValidator(5000000)])),
                ('goal_amount', models.IntegerField(blank=True, help_text='사용자의 목표 금액', null=True)),
                ('goal_period', models.IntegerField(blank=True, help_text='사용자의 목표 기간 (개월 단위)', null=True)),
                ('tendency', models.IntegerField(default=0)),
                ('desirePeriod', models.IntegerField(default=12)),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='BusinessReport',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('corp_name', models.CharField(max_length=255)),
                ('report_title', models.CharField(max_length=255)),
                ('rcept_no', models.CharField(max_length=20, unique=True)),
                ('main_products_services', models.TextField(blank=True, null=True)),
                ('sales_and_orders', models.TextField(blank=True, null=True)),
                ('business_content', models.TextField(blank=True, null=True)),
                ('summary', models.TextField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='DepositProduct',
            fields=[
                ('id', models.CharField(max_length=20, primary_key=True, serialize=False)),
                ('financial_company_code', models.CharField(max_length=20)),
                ('financial_company_name', models.CharField(max_length=20)),
                ('financial_product_code', models.CharField(max_length=20)),
                ('financial_product_name', models.CharField(max_length=255)),
                ('join_way', models.CharField(blank=True, max_length=100, null=True)),
                ('interest_rate_type', models.CharField(blank=True, max_length=50, null=True)),
                ('interest_rate_type_name', models.CharField(blank=True, max_length=50, null=True)),
                ('basic_interest_rate', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True)),
                ('max_interest_rate', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True)),
                ('dcls_month', models.CharField(blank=True, max_length=6, null=True)),
                ('spcl_cnd', models.TextField(blank=True, null=True)),
                ('mtrt_int', models.TextField(blank=True, null=True)),
                ('etc_note', models.TextField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('expected_yield', models.DecimalField(blank=True, decimal_places=2, help_text='예상 수익', max_digits=12, null=True)),
                ('popularity', models.IntegerField(default=0, help_text='사용자 가입 수 또는 인기도')),
            ],
        ),
        migrations.CreateModel(
            name='Dividend',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('corp_name', models.CharField(max_length=255)),
                ('corp_code', models.CharField(max_length=20)),
                ('dividend_per_stock', models.FloatField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='Exchange',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('cur_unit', models.CharField(max_length=10)),
                ('cur_nm', models.CharField(max_length=100)),
                ('ttb', models.DecimalField(blank=True, decimal_places=4, max_digits=10, null=True)),
                ('tts', models.DecimalField(blank=True, decimal_places=4, max_digits=10, null=True)),
                ('deal_bas_r', models.DecimalField(blank=True, decimal_places=4, max_digits=10, null=True)),
                ('bkpr', models.DecimalField(blank=True, decimal_places=4, max_digits=10, null=True)),
                ('yy_efee_r', models.DecimalField(blank=True, decimal_places=4, max_digits=10, null=True)),
                ('ten_dd_efee_r', models.DecimalField(blank=True, decimal_places=4, max_digits=10, null=True)),
                ('kftc_deal_bas_r', models.DecimalField(blank=True, decimal_places=4, max_digits=10, null=True)),
                ('kftc_bkpr', models.DecimalField(blank=True, decimal_places=4, max_digits=10, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='FinancialInstitution',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('institution_code', models.CharField(max_length=20, unique=True)),
                ('institution_name', models.CharField(max_length=255)),
                ('region', models.CharField(blank=True, max_length=255, null=True)),
                ('phone_number', models.CharField(blank=True, max_length=20, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='SavingsProduct',
            fields=[
                ('id', models.CharField(max_length=20, primary_key=True, serialize=False)),
                ('financial_company_code', models.CharField(max_length=20)),
                ('financial_company_name', models.CharField(max_length=20)),
                ('financial_product_code', models.CharField(max_length=20)),
                ('financial_product_name', models.CharField(max_length=255)),
                ('join_way', models.CharField(blank=True, max_length=100, null=True)),
                ('interest_rate_type', models.CharField(blank=True, max_length=50, null=True)),
                ('interest_rate_type_name', models.CharField(blank=True, max_length=50, null=True)),
                ('basic_interest_rate', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True)),
                ('max_interest_rate', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True)),
                ('maturity_amount', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('dcls_month', models.CharField(blank=True, max_length=6, null=True)),
                ('spcl_cnd', models.TextField(blank=True, null=True)),
                ('mtrt_int', models.TextField(blank=True, null=True)),
                ('etc_note', models.TextField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('expected_yield', models.DecimalField(blank=True, decimal_places=2, help_text='예상 수익', max_digits=12, null=True)),
                ('popularity', models.IntegerField(default=0, help_text='사용자 가입 수 또는 인기도')),
            ],
        ),
        migrations.CreateModel(
            name='UserProductRelation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('product_type', models.CharField(choices=[('deposit', '예금'), ('savings', '적금')], max_length=10)),
                ('product_id', models.IntegerField()),
                ('join_date', models.DateTimeField(auto_now_add=True)),
                ('amount_saved', models.DecimalField(decimal_places=2, default=0, max_digits=12)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='StockBoard',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200)),
                ('content', models.TextField()),
                ('stock_name', models.CharField(max_length=100)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='posts', to=settings.AUTH_USER_MODEL)),
                ('likes', models.ManyToManyField(blank=True, related_name='liked_posts', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='RealAsset',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('category', models.CharField(max_length=50)),
                ('name', models.CharField(max_length=100)),
                ('value', models.DecimalField(decimal_places=2, max_digits=12)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='real_assets', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Join',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('product_code', models.CharField(max_length=50)),
                ('product_name', models.CharField(max_length=255)),
                ('joined_at', models.DateTimeField(auto_now_add=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Interest',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('category', models.CharField(max_length=50)),
                ('item_id', models.PositiveIntegerField()),
                ('liked_at', models.DateTimeField(auto_now_add=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='interests', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Image',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(upload_to='images/')),
                ('uploaded_at', models.DateTimeField(auto_now_add=True)),
                ('post', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='images', to='core.stockboard')),
            ],
        ),
        migrations.CreateModel(
            name='Comment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('content', models.TextField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('post', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='comments', to='core.stockboard')),
            ],
        ),
        migrations.AddField(
            model_name='user',
            name='deposit_products',
            field=models.ManyToManyField(blank=True, related_name='users', to='core.depositproduct'),
        ),
        migrations.AddField(
            model_name='user',
            name='groups',
            field=models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups'),
        ),
        migrations.AddField(
            model_name='user',
            name='saving_products',
            field=models.ManyToManyField(blank=True, related_name='users', to='core.savingsproduct'),
        ),
        migrations.AddField(
            model_name='user',
            name='user_permissions',
            field=models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions'),
        ),
    ]
